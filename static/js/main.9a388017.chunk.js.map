{"version":3,"sources":["App.module.css","components/FileSubmit/FileSubmit.module.css","components/FileSubmit/FileSubmit.jsx","components/ResultsTable/ResultsTable.jsx","api/index.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","myDropZone","background","borderColor","minHeight","borderWidth","borderStyle","myDropZoneText","fontSize","paddingLeft","paddingRight","marginTop","FileSubmit","props","classes","className","styles","DropzoneAreaContainer","onChange","handleFileChange","dropzoneText","filesLimit","showPreviewsInDropzone","useChipsForPreview","dropzoneClass","dropzoneParagraphClass","ResultsTable","rows","ledger","this","data","i","length","push","TextRow","id","React","Component","processRawData","rawData","papaCSV","console","log","Winner","Loser","Amount","App","state","event","Papa","parse","header","complete","results","ledgerData","setState","processedData","Body","SubmitContainer","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,gBAAkB,+B,wCCApCD,EAAOC,QAAU,CAAC,sBAAwB,4C,wLCIpCC,EAAYC,YAAW,CAC3BC,WAAY,CACVC,WAAY,UACZC,YAAa,UACbC,UAAW,QACXC,YAAa,MACbC,YAAa,UAEfC,eAAgB,CACdC,SAAU,OACVC,YAAa,OACbC,aAAc,OACdC,UAAW,SAIA,SAASC,EAAWC,GACjC,IAAMC,EAAUf,IAChB,OACE,qBAAKgB,UAAWC,IAAOC,sBAAvB,SACE,cAAC,IAAD,CACEC,SAAUL,EAAMM,iBAChBC,aAAc,wCACdC,WAAY,EACZC,wBAA0B,EAC1BC,oBAAqB,EACrBC,cAAeV,EAAQb,WACvBwB,uBAAwBX,EAAQP,mB,qBCXzBmB,E,4JAjBX,WAGI,IAFA,IAAIC,EAAO,GACLC,EAASC,KAAKhB,MAAMiB,KACjBC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BJ,EAAKM,KACL,sBAAKlB,UAAWC,IAAOkB,QAAvB,UACKN,EAAOG,GAAP,MADL,SAC+BH,EAAOG,GAAP,OAD/B,IACqDH,EAAOG,GAAP,SADhBA,IAIzC,OACI,qBAAKI,GAAG,eAAepB,UAAWC,IAAOU,aAAzC,SACKC,Q,GAZUS,IAAMC,WCC3BC,EAAiB,SAACC,GACtB,IALsBC,IAKKD,EAJ3BE,QAAQC,IAAIF,GAKZ,MAAO,CACL,CACEG,OAAQ,UACRC,MAAO,SACPC,OAAQ,GAEV,CACEF,OAAQ,UACRC,MAAO,SACPC,OAAQ,GAEV,CACEF,OAAQ,UACRC,MAAO,SACPC,OAAQ,GAEV,CACEF,OAAQ,UACRC,MAAO,SACPC,OAAQ,KCoCCC,E,kDApDb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAHRkC,MAAQ,GAEW,EAuBnB5B,iBAAmB,SAAC6B,GACdA,EAAMhB,OAAS,GACjBiB,IAAKC,MAAMF,EAAM,GAAI,CACnBG,QAAQ,EACRC,SAAU,SAACC,GACTZ,QAAQC,IAAIW,GACZ,IAAIC,EAAahB,EAAee,GAChCZ,QAAQC,IAAIY,GACZ,EAAKC,SAAS,CAAEC,cAAeF,QA7BrC,EAAKP,MAAQ,CACXS,cAAe,CACb,CACEb,OAAQ,UACRC,MAAO,SACPC,OAAQ,GAEV,CACEF,OAAQ,UACRC,MAAO,SACPC,OAAQ,GAEV,CACEF,OAAQ,UACRC,MAAO,SACPC,OAAQ,KAjBG,E,0CAqCnB,WACE,OACE,sBAAK9B,UAAWC,IAAOyC,KAAvB,UACE,8CACA,qBAAK1C,UAAWC,IAAO0C,gBAAvB,SACE,cAAC9C,EAAD,CAAYO,iBAAkBU,KAAKV,qBAErC,qBAAKJ,UAAWC,IAAOU,aAAvB,SACE,cAAC,EAAD,CAAcI,KAAMD,KAAKkB,MAAMS,yB,GAhDvBpB,IAAMC,WCDxBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9a388017.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubmitContainer\":\"App_SubmitContainer__1B5DM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropzoneAreaContainer\":\"FileSubmit_DropzoneAreaContainer__3mwDz\"};","import React from 'react'\nimport styles from \"./FileSubmit.module.css\";\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  myDropZone: {\n    background: '#f1f1f1',\n    borderColor: '#04957D',\n    minHeight: '200px',\n    borderWidth: \"1px\",\n    borderStyle: \"dashed\"\n  },\n  myDropZoneText: {\n    fontSize: \"20px\",\n    paddingLeft: \"2.5%\",\n    paddingRight: \"2.5%\",\n    marginTop: \"10%\",\n  }\n});\n\nexport default function FileSubmit(props) {\n  const classes = useStyles();\n  return (\n    <div className={styles.DropzoneAreaContainer}>\n      <DropzoneArea\n        onChange={props.handleFileChange}\n        dropzoneText={\"Select your matches.json or drag here\"}\n        filesLimit={1}\n        showPreviewsInDropzone = {true}\n        useChipsForPreview ={true}\n        dropzoneClass={classes.myDropZone}\n        dropzoneParagraphClass={classes.myDropZoneText}\n      />\n    </div>\n   )\n  }","import React from 'react';\nimport styles from './ResultsTable.module.css';\n\nclass ResultsTable extends React.Component{\n    render() {\n        let rows = [];\n        const ledger = this.props.data\n        for (let i = 0; i < ledger.length; i++){\n            rows.push(\n            <div className={styles.TextRow} key={i}>\n                {ledger[i][\"Loser\"]} pays {ledger[i][\"Winner\"]} {ledger[i][\"Amount\"]}\n            </div>);\n        }\n        return (\n            <div id='ResultsTable' className={styles.ResultsTable}>\n                {rows}\n            </div>\n        );\n    }\n}\n\nexport default ResultsTable;","const heapConversion = (papaCSV) => {\n  console.log(papaCSV);\n};\n\nconst processRawData = (rawData) => {\n  let heaps = heapConversion(rawData);\n  return [\n    {\n      Winner: \"Winner1\",\n      Loser: \"Loser1\",\n      Amount: 1,\n    },\n    {\n      Winner: \"Winner2\",\n      Loser: \"Loser2\",\n      Amount: 2,\n    },\n    {\n      Winner: \"Winner3\",\n      Loser: \"Loser3\",\n      Amount: 3,\n    },\n    {\n      Winner: \"Winner4\",\n      Loser: \"Loser4\",\n      Amount: 4,\n    },\n  ];\n};\nexport { processRawData };\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Papa from \"papaparse\";\nimport FileSubmit from \"./components/FileSubmit/FileSubmit\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport { processRawData } from \"./api/index.js\";\nclass App extends React.Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      processedData: [\n        {\n          Winner: \"Winner1\",\n          Loser: \"Loser1\",\n          Amount: 1,\n        },\n        {\n          Winner: \"Winner2\",\n          Loser: \"Loser2\",\n          Amount: 2,\n        },\n        {\n          Winner: \"Winner3\",\n          Loser: \"Loser3\",\n          Amount: 3,\n        },\n      ],\n    };\n  }\n\n  handleFileChange = (event) => {\n    if (event.length > 0) {\n      Papa.parse(event[0], {\n        header: true,\n        complete: (results) => {\n          console.log(results);\n          let ledgerData = processRawData(results);\n          console.log(ledgerData);\n          this.setState({ processedData: ledgerData });\n        },\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className={styles.Body}>\n        <div>Header Text</div>\n        <div className={styles.SubmitContainer}>\n          <FileSubmit handleFileChange={this.handleFileChange} />\n        </div>\n        <div className={styles.ResultsTable}>\n          <ResultsTable data={this.state.processedData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}