{"version":3,"sources":["components/FileSubmit/FileSubmit.jsx","components/ResultsTable/ResultsTable.jsx","components/FormEntry/FormEntry.jsx","api/index.js","App.js","index.js","components/FormEntry/FormEntry.module.css","App.module.css","components/FileSubmit/FileSubmit.module.css"],"names":["useStyles","makeStyles","myDropZone","background","borderColor","minHeight","borderWidth","borderStyle","myDropZoneText","fontSize","paddingLeft","paddingRight","marginTop","FileSubmit","props","classes","className","styles","DropzoneAreaContainer","onChange","handleFileChange","dropzoneText","filesLimit","showPreviewsInDropzone","useChipsForPreview","dropzoneClass","dropzoneParagraphClass","ResultsTable","rows","ledger","this","data","i","length","push","TextRow","id","React","Component","FormEntry","useState","people","setPeople","displayForm","setDisplayForm","name","buyin","buyout","newPerson","setNewPerson","handleOnChange","event","target","value","deleteRow","tempPeople","splice","DataTable","TableHead","map","row","index","TableName","TableNumber","net","onClick","placeholder","InputBox","addButton","handleFormEntry","submitForm","heapConversion","rawData","source","csvData","papaCSV","pokerNowData","obj","Object","keys","parseInt","processPokerNow","formData","netVal","processFormEntry","minArray","maxArray","balanceCheck","key","person","balance","arr","alert","minPQ","Heap","a","b","init","maxPQ","resultArray","size","Winner","Loser","Amount","down","poll","up","diff","add","processRawData","dataSource","Array","isArray","identifyData","App","state","Papa","parse","header","complete","results","ledgerData","setState","processedData","Body","SubmitContainer","TableContainer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5eaf876d.chunk.js","sourcesContent":["import React from 'react'\nimport styles from \"./FileSubmit.module.css\";\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  myDropZone: {\n    background: '#f1f1f1',\n    borderColor: '#04957D',\n    minHeight: '200px',\n    borderWidth: \"1px\",\n    borderStyle: \"dashed\"\n  },\n  myDropZoneText: {\n    fontSize: \"20px\",\n    paddingLeft: \"2.5%\",\n    paddingRight: \"2.5%\",\n    marginTop: \"10%\",\n  }\n});\n\nexport default function FileSubmit(props) {\n  const classes = useStyles();\n  return (\n    <div className={styles.DropzoneAreaContainer}>\n      <DropzoneArea\n        onChange={props.handleFileChange}\n        dropzoneText={\"Select your PokerNow CSV or enter buy-ins in the form\"}\n        filesLimit={1}\n        showPreviewsInDropzone = {true}\n        useChipsForPreview ={true}\n        dropzoneClass={classes.myDropZone}\n        dropzoneParagraphClass={classes.myDropZoneText}\n      />\n    </div>\n   )\n  }","import React from 'react';\nimport styles from './ResultsTable.module.css';\n\nclass ResultsTable extends React.Component{\n    render() {\n        let rows = [];\n        const ledger = this.props.data\n        for (let i = 0; i < ledger.length; i++){\n            rows.push(\n            <div className={styles.TextRow} key={i}>\n                {ledger[i][\"Loser\"]} pays {ledger[i][\"Winner\"]} ${ledger[i][\"Amount\"]}\n            </div>);\n        }\n        return (\n            <div id='ResultsTable' className={styles.ResultsTable}>\n                {rows}\n            </div>\n        );\n    }\n}\n\nexport default ResultsTable;","import styles from './FormEntry.module.css';\nimport { useState } from \"react\";\n\nexport default function FormEntry(props) {\n  const [people, setPeople] = useState([\n      {\"name\": \"Lost69\", \"net\": -69},\n      {\"name\": \"Won68\", \"buyin\": 1, \"buyout\": 69},\n      {\"name\": \"Won20\", \"buyin\": 420, \"buyout\": 440},\n      {\"name\": \"Lost15\", \"buyin\": 420, \"buyout\": 405},\n      {\"name\": \"Lost5\", \"buyin\": 420, \"buyout\": 415},\n      {\"name\": \"Won1\", \"buyin\": 420, \"buyout\": 421}]);\n  const [displayForm, setDisplayForm] = useState(true);\n  const [newPerson, setNewPerson] = useState({\n    name: \"\",\n    buyin: \"\",\n    buyout: \"\"\n  });\n\n  const addPerson = () => {\n    setPeople([...people, { ...newPerson }]);\n    setNewPerson({ name: \"\", buyin: \"\", buyout: \"\" });\n    setDisplayForm(false);\n  };\n\n  const handleOnChange = (event) => {\n    setNewPerson({\n      ...newPerson,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const deleteRow = (event) => {\n    let tempPeople = people;\n    tempPeople.splice(event.target.id, 1);\n    setPeople([...tempPeople]);\n  };\n\n  const passFormData = (event) => {\n    props.handleFormEntry(people)\n  }\n\n  return (\n    <div>\n      <table className={styles.DataTable}>\n        <thead>\n          <tr className={styles.TableHead}>\n            <th>Name</th>\n            <th>Buy-in</th>\n            <th>Buy-out</th>\n            <th>Net</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((row, index) => (\n            <tr>\n              <td className={styles.TableName}>{row.name}</td>\n              <td className={styles.TableNumber}>{row.buyin}</td>\n              <td className={styles.TableNumber}>{row.buyout}</td>\n              <td className={styles.TableNumber}>{row.net}</td>\n              <td>\n                <button \n                    className={styles.deleteRow} \n                    onClick={deleteRow}\n                    id={index}>\n                        Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {displayForm ? (\n        <div>\n          <div>\n            <input\n              placeholder=\"Name\"\n              onChange={handleOnChange}\n              value={newPerson.name}\n              name=\"name\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Buy-in\"\n              onChange={handleOnChange}\n              value={newPerson.buyin}\n              name=\"buyin\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Buy-out\"\n              onChange={handleOnChange}\n              value={newPerson.buyout}\n              name=\"buyout\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Net\"\n              onChange={handleOnChange}\n              value={newPerson.net}\n              name=\"net\"\n              className={styles.InputBox}\n            />\n          </div>\n          <button onClick={addPerson} className={styles.addButton}>\n            Add Person\n          </button>\n        </div>\n      ) : (\n        <button onClick={() => setDisplayForm(!displayForm)} className={styles.addButton}>\n          Add Row\n        </button>\n      )}\n      <div>\n          <button onClick={passFormData} className={styles.submitForm}>Submit!</button>\n      </div>\n    </div>\n  );\n}","import { Heap } from \"heap-js\";\n\nconst identifyData = (rawData) => {\n  if (Array.isArray(rawData)) {\n    return \"FormEntry\";\n  } else if (typeof rawData === \"object\") {\n    let data = rawData.data[0];\n    if (\n      \"buy_in\" in data &&\n      \"buy_out\" in data &&\n      \"net\" in data &&\n      \"player_id\" in data &&\n      \"player_nickname\" in data &&\n      \"session_end_at\" in data &&\n      \"session_start_at\" in data &&\n      \"stack\" in data\n    ) {\n      return \"PokerNow\";\n    }\n  }\n\n  alert(\"Invalid data source - check that the file is the original export!\");\n};\n\nconst processPokerNow = (papaCSV) => {\n  let pokerNowData = papaCSV.data;\n  let obj = {};\n  for (let i = 0; i < pokerNowData.length; i++) {\n    let row = pokerNowData[i];\n    if (Object.keys(row).length > 1) {\n      let name = `${row[\"player_nickname\"]} (${row[\"player_id\"]})`;\n      if (!(name in obj)) {\n        obj[name] = 0;\n      }\n      obj[name] += parseInt(row[\"net\"]);\n    }\n  }\n  return obj;\n};\n\nconst processFormEntry = (formData) => {\n  let obj = {};\n  for (let i = 0; i < formData.length; i++) {\n    let row = formData[i];\n    let name = row[\"name\"];\n    let netVal;\n    if (row[\"net\"]) {\n      netVal = parseInt(row[\"net\"]);\n    } else {\n      netVal = parseInt(row[\"buyout\"]) - parseInt(row[\"buyin\"]);\n    }\n    if (!(name in obj)) {\n      obj[name] = 0;\n    }\n    obj[name] += netVal;\n  }\n  return obj;\n};\n\nconst heapConversion = (rawData, source) => {\n  let csvData = {};\n  if (source === \"PokerNow\") {\n    csvData = processPokerNow(rawData);\n  } else if (source === \"FormEntry\") {\n    csvData = processFormEntry(rawData);\n  }\n  let minArray = [];\n  let maxArray = [];\n  let balanceCheck = 0;\n\n  for (let key of Object.keys(csvData)) {\n    let person = key;\n    let balance = csvData[key];\n    let arr = [person, balance];\n    if (balance < 0) {\n      minArray.push(arr);\n    } else {\n      maxArray.push(arr);\n    }\n    balanceCheck += balance;\n  }\n\n  if (balanceCheck !== 0) {\n    alert(`Net total is off by ${balanceCheck}`);\n  }\n\n  const minPriorityComparator = (a, b) => a[1] - b[1];\n  const minPQ = new Heap(minPriorityComparator);\n  minPQ.init(minArray);\n\n  const maxPriorityComparator = (a, b) => b[1] - a[1];\n  const maxPQ = new Heap(maxPriorityComparator);\n  maxPQ.init(maxArray);\n\n  let resultArray = [];\n  while (minPQ.size() > 0 && maxPQ.size() > 0) {\n    let obj = {\n      Winner: \"\",\n      Loser: \"\",\n      Amount: \"\",\n    };\n    let down = minPQ.poll();\n    let up = maxPQ.poll();\n    obj[\"Winner\"] = up[0];\n    obj[\"Loser\"] = down[0];\n    let diff = up[1] + down[1];\n    if (diff < 0) {\n      obj[\"Amount\"] = up[1];\n      minPQ.add([down[0], diff]);\n    }\n    if (diff > 0) {\n      obj[\"Amount\"] = -down[1];\n      maxPQ.add([up[0], diff]);\n    } else {\n      obj[\"Amount\"] = up[1];\n    }\n    resultArray.push(obj);\n  }\n  return resultArray;\n};\n\nconst processRawData = (rawData) => {\n  let dataSource = identifyData(rawData);\n  let resultArray = heapConversion(rawData, dataSource);\n  return resultArray;\n};\nexport { processRawData };\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Papa from \"papaparse\";\nimport FileSubmit from \"./components/FileSubmit/FileSubmit\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport FormEntry from \"./components/FormEntry/FormEntry\";\nimport { processRawData } from \"./api/index.js\";\nclass App extends React.Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      processedData: [\n        {\n          Winner: \"exampleWinner1\",\n          Loser: \"exampleLoser1\",\n          Amount: 1,\n        },\n        {\n          Winner: \"exampleWinner2\",\n          Loser: \"exampleLoser2\",\n          Amount: 2,\n        },\n        {\n          Winner: \"exampleWinner3\",\n          Loser: \"exampleLoser3\",\n          Amount: 3,\n        },\n      ],\n    };\n  }\n\n  handleFileChange = (event) => {\n    if (event.length > 0) {\n      Papa.parse(event[0], {\n        header: true,\n        complete: (results) => {\n          let ledgerData = processRawData(results);\n          this.setState({ processedData: ledgerData });\n        },\n      });\n    }\n  };\n\n  handleFormEntry = (formData) => {\n    let ledgerData = processRawData(formData);\n    this.setState({ processedData: ledgerData });\n  };\n\n  render() {\n    return (\n      <div className={styles.Body}>\n        <h1>Poker Payments</h1>\n        <div className={styles.SubmitContainer}>\n          <FileSubmit handleFileChange={this.handleFileChange} />\n        </div>\n        <div className={styles.TableContainer}>\n          <FormEntry handleFormEntry={this.handleFormEntry} />\n        </div>\n        <h2>Payments</h2>\n        <div className={styles.ResultsTable}>\n          <ResultsTable data={this.state.processedData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataTable\":\"FormEntry_DataTable__1_ytq\",\"TableHead\":\"FormEntry_TableHead__3ahv6\",\"TableNumber\":\"FormEntry_TableNumber__3V3Oy\",\"TableName\":\"FormEntry_TableName__2GlTS\",\"InputBox\":\"FormEntry_InputBox__2GI1Y\",\"addButton\":\"FormEntry_addButton__3RZPx\",\"deleteRow\":\"FormEntry_deleteRow__3qx7X\",\"submitForm\":\"FormEntry_submitForm__2El8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubmitContainer\":\"App_SubmitContainer__1B5DM\",\"TableContainer\":\"App_TableContainer__2b5u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropzoneAreaContainer\":\"FileSubmit_DropzoneAreaContainer__3mwDz\"};"],"sourceRoot":""}