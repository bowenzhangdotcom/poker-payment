{"version":3,"sources":["components/FileSubmit/FileSubmit.jsx","components/ResultsTable/ResultsTable.jsx","components/FormEntry/FormEntry.jsx","api/index.js","App.js","index.js","components/FormEntry/FormEntry.module.css","App.module.css","components/FileSubmit/FileSubmit.module.css"],"names":["useStyles","makeStyles","myDropZone","background","borderColor","minHeight","borderWidth","borderStyle","myDropZoneText","fontSize","paddingLeft","paddingRight","marginTop","FileSubmit","props","classes","className","styles","DropzoneAreaContainer","onChange","handleFileChange","dropzoneText","filesLimit","showPreviewsInDropzone","useChipsForPreview","dropzoneClass","dropzoneParagraphClass","ResultsTable","rows","playerNets","this","data","key","push","TextRow","ledger","length","i","id","React","Component","FormEntry","useState","people","setPeople","displayForm","setDisplayForm","name","buyin","buyout","newPerson","setNewPerson","handleOnChange","event","target","value","deleteRow","tempPeople","splice","DataTable","TableHead","map","row","index","TableName","TableNumber","net","onClick","PeopleAdd","placeholder","InputBox","addButton","handleFormEntry","submitForm","createPlayerNets","rawData","source","currentPlayerNets","csvData","papaCSV","pokerNowData","obj","Object","keys","parseFloat","processPokerNow","formData","netVal","processFormEntry","DonkHouseData","user","valueArray","Net","Contact","processDonkHouse","processRawData","dataSource","Array","isArray","some","test","alert","identifyData","minArray","maxArray","balanceCheck","person","balance","arr","minPQ","Heap","a","b","init","maxPQ","resultArray","size","Winner","Loser","Amount","down","poll","up","diff","add","payouts","heapConversion","App","state","Papa","parse","header","complete","results","ledgerData","processedData","setState","Body","SubmitContainer","TableContainer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97448d40.chunk.js","sourcesContent":["import React from 'react'\nimport styles from \"./FileSubmit.module.css\";\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  myDropZone: {\n    background: '#f1f1f1',\n    borderColor: '#04957D',\n    minHeight: '200px',\n    borderWidth: \"1px\",\n    borderStyle: \"dashed\"\n  },\n  myDropZoneText: {\n    fontSize: \"20px\",\n    paddingLeft: \"2.5%\",\n    paddingRight: \"2.5%\",\n    marginTop: \"10%\",\n  }\n});\n\nexport default function FileSubmit(props) {\n  const classes = useStyles();\n  return (\n    <div className={styles.DropzoneAreaContainer}>\n      <DropzoneArea\n        onChange={props.handleFileChange}\n        dropzoneText={\"Select a PokerNow CSV, DonkHouse CSV, or enter details in the form\"}\n        filesLimit={10}\n        showPreviewsInDropzone = {false}\n        useChipsForPreview ={true}\n        dropzoneClass={classes.myDropZone}\n        dropzoneParagraphClass={classes.myDropZoneText}\n      />\n    </div>\n   )\n  }","import React from 'react';\nimport styles from './ResultsTable.module.css';\n\nclass ResultsTable extends React.Component{\n    render() {\n        let rows = [];\n        const playerNets = this.props.data[\"playerNets\"]\n            for (const key in playerNets){\n                rows.push(\n                <div className={styles.TextRow} key={key}>\n                    {key} nets out {playerNets[key]}\n                </div>);\n            }\n        rows.push(\n            <div className={styles.TextRow} key={\"spacingBoi\"}>-------</div>);\n        const ledger = this.props.data[\"payouts\"]\n        if (ledger.length > 0) {\n            for (let i = 0; i < ledger.length; i++){\n                rows.push(\n                <div className={styles.TextRow} key={i}>\n                    {ledger[i][\"Loser\"]} pays {ledger[i][\"Winner\"]} ${ledger[i][\"Amount\"]}\n                </div>);\n            }\n        }\n        return (\n            <div id='ResultsTable' className={styles.ResultsTable}>\n                {rows}\n            </div>\n        );\n    }\n}\n\nexport default ResultsTable;","import styles from './FormEntry.module.css';\nimport { useState } from \"react\";\n\nexport default function FormEntry(props) {\n  const [people, setPeople] = useState([\n      {\"name\": \"Lost69\", \"net\": -69},\n      {\"name\": \"Won68\", \"buyin\": 1, \"buyout\": 69},\n      {\"name\": \"Won1\", \"buyin\": 420, \"buyout\": 421}]);\n  const [displayForm, setDisplayForm] = useState(true);\n  const [newPerson, setNewPerson] = useState({\n    name: \"\",\n    buyin: \"\",\n    buyout: \"\"\n  });\n\n  const addPerson = () => {\n    setPeople([...people, { ...newPerson }]);\n    setNewPerson({ name: \"\", buyin: \"\", buyout: \"\" });\n    setDisplayForm(false);\n  };\n\n  const handleOnChange = (event) => {\n    setNewPerson({\n      ...newPerson,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const deleteRow = (event) => {\n    let tempPeople = people;\n    tempPeople.splice(event.target.id, 1);\n    setPeople([...tempPeople]);\n  };\n\n  const passFormData = (event) => {\n    props.handleFormEntry(people)\n  }\n\n  return (\n    <div>\n      <table className={styles.DataTable}>\n        <thead>\n          <tr className={styles.TableHead}>\n            <th>Name</th>\n            <th>Buy-in</th>\n            <th>Buy-out</th>\n            <th>Net</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((row, index) => (\n            <tr>\n              <td className={styles.TableName}>{row.name}</td>\n              <td className={styles.TableNumber}>{row.buyin}</td>\n              <td className={styles.TableNumber}>{row.buyout}</td>\n              <td className={styles.TableNumber}>{row.net}</td>\n              <td>\n                <button \n                    className={styles.deleteRow} \n                    onClick={deleteRow}\n                    id={index}>\n                        Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {displayForm ? (\n        <div>\n          <div className = {styles.PeopleAdd}>\n            <input\n              placeholder=\"Name\"\n              onChange={handleOnChange}\n              value={newPerson.name}\n              name=\"name\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Buy-in\"\n              onChange={handleOnChange}\n              value={newPerson.buyin}\n              name=\"buyin\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Buy-out\"\n              onChange={handleOnChange}\n              value={newPerson.buyout}\n              name=\"buyout\"\n              className={styles.InputBox}\n            />\n            <input\n              placeholder=\"Net\"\n              onChange={handleOnChange}\n              value={newPerson.net}\n              name=\"net\"\n              className={styles.InputBox}\n            />\n          </div>\n          <button onClick={addPerson} className={styles.addButton}>\n            Add Person\n          </button>\n        </div>\n      ) : (\n        <button onClick={() => setDisplayForm(!displayForm)} className={styles.addButton}>\n          Add Row\n        </button>\n      )}\n      <div>\n          <button onClick={passFormData} className={styles.submitForm}>Submit!</button>\n      </div>\n    </div>\n  );\n}","import { Heap } from \"heap-js\";\n\nconst identifyData = (rawData) => {\n  if (Array.isArray(rawData)) {\n    return \"FormEntry\";\n  } else if (typeof rawData === \"object\") {\n    let data = rawData.data[0];\n    let hasDonkHouseKeyRegex = Object.keys(data).some(function (key) {\n      return /Most recent sessions as of/.test(key);\n    });\n    if (hasDonkHouseKeyRegex) {\n      return \"DonkHouse\";\n    } else if (\n      \"buy_in\" in data &&\n      \"buy_out\" in data &&\n      \"net\" in data &&\n      \"player_id\" in data &&\n      \"player_nickname\" in data &&\n      \"session_end_at\" in data &&\n      \"session_start_at\" in data &&\n      \"stack\" in data\n    ) {\n      return \"PokerNow\";\n    }\n  }\n  alert(\"Invalid data source - check that the file is the original export!\");\n};\n\nconst processPokerNow = (papaCSV) => {\n  let pokerNowData = papaCSV.data;\n  let obj = {};\n  for (let i = 0; i < pokerNowData.length; i++) {\n    let row = pokerNowData[i];\n    if (Object.keys(row).length > 1) {\n      let name = `${row[\"player_nickname\"]} (${row[\"player_id\"]})`;\n      if (!(name in obj)) {\n        obj[name] = 0;\n      }\n      obj[name] += parseFloat(row[\"net\"]);\n    }\n  }\n  return obj;\n};\n\nconst processDonkHouse = (papaCSV) => {\n  let DonkHouseData = papaCSV.data;\n  let obj = {};\n  for (let i = 1; i < DonkHouseData.length; i++) {\n    let row = DonkHouseData[i];\n    const primaryKey = Object.keys(row)[0];\n    let user = row[primaryKey];\n    if (user === \"\" || user === \"End time:\") {\n      return obj;\n    }\n    let valueArray = row[\"__parsed_extra\"];\n    let [In, Out, Net, ChipsInPlay, Contact] = valueArray;\n\n    let nameKey;\n    if (Contact.length > 0 && Contact !== \"None provided\") {\n      nameKey = Contact;\n    } else {\n      nameKey = user;\n    }\n    obj[nameKey] = parseFloat(Net);\n  }\n  return obj;\n};\n\nconst processFormEntry = (formData) => {\n  let obj = {};\n  for (let i = 0; i < formData.length; i++) {\n    let row = formData[i];\n    let name = row[\"name\"];\n    let netVal;\n    if (row[\"net\"]) {\n      netVal = parseFloat(row[\"net\"]);\n    } else {\n      netVal = parseFloat(row[\"buyout\"]) - parseFloat(row[\"buyin\"]);\n    }\n    if (!(name in obj)) {\n      obj[name] = 0;\n    }\n    obj[name] += netVal;\n  }\n  return obj;\n};\n\nconst createPlayerNets = (rawData, source, currentPlayerNets) => {\n  let csvData = {};\n  if (source === \"PokerNow\") {\n    csvData = processPokerNow(rawData);\n  } else if (source === \"FormEntry\") {\n    csvData = processFormEntry(rawData);\n  } else if (source === \"DonkHouse\") {\n    csvData = processDonkHouse(rawData);\n  }\n\n  for (let key of Object.keys(currentPlayerNets)) {\n    if (key in csvData) {\n      csvData[key] += currentPlayerNets[key];\n    } else {\n      csvData[key] = currentPlayerNets[key];\n    }\n  }\n  return csvData;\n};\nconst heapConversion = (csvData, source) => {\n  let minArray = [];\n  let maxArray = [];\n  let balanceCheck = 0;\n\n  for (let key of Object.keys(csvData)) {\n    let person = key;\n    let balance = csvData[key];\n    let arr = [person, balance];\n    if (balance < 0) {\n      minArray.push(arr);\n    } else {\n      maxArray.push(arr);\n    }\n    balanceCheck += balance;\n  }\n\n  if (balanceCheck !== 0) {\n    alert(`Net total is off by ${balanceCheck}`);\n  }\n\n  const minPriorityComparator = (a, b) => a[1] - b[1];\n  const minPQ = new Heap(minPriorityComparator);\n  minPQ.init(minArray);\n\n  const maxPriorityComparator = (a, b) => b[1] - a[1];\n  const maxPQ = new Heap(maxPriorityComparator);\n  maxPQ.init(maxArray);\n\n  let resultArray = [];\n  while (minPQ.size() > 0 && maxPQ.size() > 0) {\n    let obj = {\n      Winner: \"\",\n      Loser: \"\",\n      Amount: \"\",\n    };\n    let down = minPQ.poll();\n    let up = maxPQ.poll();\n    obj[\"Winner\"] = up[0];\n    obj[\"Loser\"] = down[0];\n    let diff = up[1] + down[1];\n    if (diff < 0) {\n      obj[\"Amount\"] = up[1];\n      minPQ.add([down[0], diff]);\n    }\n    if (diff > 0) {\n      obj[\"Amount\"] = -down[1];\n      maxPQ.add([up[0], diff]);\n    } else {\n      obj[\"Amount\"] = up[1];\n    }\n    resultArray.push(obj);\n  }\n  return { payouts: resultArray, playerNets: csvData };\n};\n\nconst processRawData = (rawData, currentPlayerNets) => {\n  let dataSource = identifyData(rawData);\n  let playerNets = createPlayerNets(rawData, dataSource, currentPlayerNets);\n  let results = heapConversion(playerNets);\n  return results;\n};\nexport { processRawData };\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Papa from \"papaparse\";\nimport FileSubmit from \"./components/FileSubmit/FileSubmit\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport FormEntry from \"./components/FormEntry/FormEntry\";\nimport { processRawData } from \"./api/index.js\";\nclass App extends React.Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      processedData: {\n        payouts: [\n          // {\n          //   Winner: \"Won68\",\n          //   Loser: \"Lost69\",\n          //   Amount: 68,\n          // },\n          // {\n          //   Winner: \"Won1\",\n          //   Loser: \"Lost69\",\n          //   Amount: 1,\n          // },\n        ],\n        playerNets: {\n          // Lost69: -69,\n          // Won68: 68,\n          // Won1: 1,\n        },\n      },\n    };\n  }\n\n  handleFileChange = (event) => {\n    if (event.length > 0) {\n      Papa.parse(event[0], {\n        header: true,\n        complete: (results) => {\n          let ledgerData = processRawData(\n            results,\n            this.state.processedData[\"playerNets\"]\n          );\n          this.setState({ processedData: ledgerData });\n        },\n      });\n    }\n  };\n\n  handleFormEntry = (formData) => {\n    let ledgerData = processRawData(\n      formData,\n      this.state.processedData[\"playerNets\"]\n    );\n    this.setState({ processedData: ledgerData });\n  };\n\n  render() {\n    return (\n      <div className={styles.Body}>\n        <h1>Poker Payment</h1>\n        <div className={styles.SubmitContainer}>\n          <FileSubmit handleFileChange={this.handleFileChange} />\n        </div>\n        <div className={styles.TableContainer}>\n          <FormEntry handleFormEntry={this.handleFormEntry} />\n        </div>\n        <h2>Payments</h2>\n        <div className={styles.ResultsTable}>\n          <ResultsTable data={this.state.processedData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataTable\":\"FormEntry_DataTable__1_ytq\",\"TableHead\":\"FormEntry_TableHead__3ahv6\",\"TableNumber\":\"FormEntry_TableNumber__3V3Oy\",\"TableName\":\"FormEntry_TableName__2GlTS\",\"InputBox\":\"FormEntry_InputBox__2GI1Y\",\"addButton\":\"FormEntry_addButton__3RZPx\",\"deleteRow\":\"FormEntry_deleteRow__3qx7X\",\"submitForm\":\"FormEntry_submitForm__2El8v\",\"PeopleAdd\":\"FormEntry_PeopleAdd__2wRm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubmitContainer\":\"App_SubmitContainer__1B5DM\",\"TableContainer\":\"App_TableContainer__2b5u9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropzoneAreaContainer\":\"FileSubmit_DropzoneAreaContainer__3mwDz\"};"],"sourceRoot":""}